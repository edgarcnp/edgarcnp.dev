name: Project Board Automation [Issue - Bug]

on:
  issues:
    types: [labeled]
    branches:
      - main
    labels:
      - bug

jobs:
  create_bug_card:
    runs-on: ubuntu-latest
    steps:
      - name: Get project data
        env:
          GITHUB_TOKEN: ${{ secrets.PROJECT_BOARD_PAT }}
          PROJECT_NUMBER: 2
        run: |
          gh api graphql -f query='
            query {
              repository(owner: "edgarcnp", name: "edgarcnp.dev") {
                projectV2(number: 2) {
                  id
                  fields(first:20) {
                    nodes {
                      ... on ProjectV2Field {
                        id
                        name
                      }
                      ... on ProjectV2SingleSelectField {
                        id
                        name
                        options {
                          id
                          name
                        }
                      }
                    }
                  }
                }
              }
            }' > project_data.json

          echo 'PROJECT_ID='$(jq '.data.repository.projectV2.id' project_data.json) >> $GITHUB_ENV
          echo 'STATUS_FIELD_ID='$(jq '.data.repository.projectV2.fields.nodes[] | select(.name== "Status") | .id' project_data.json) >> $GITHUB_ENV
          echo 'BUGS_OPTION_ID='$(jq '.data.repository.projectV2.fields.nodes[] | select(.name== "Status") | .options[] | select(.name=="Bugs") | .id' project_data.json) >> $GITHUB_ENV

      - name: Add Issue with label bug to project
        env:
          GITHUB_TOKEN: ${{ secrets.PROJECT_BOARD_PAT }}
          ISSUE_ID: ${{ github.event.issue.node_id }}
        run: |
          item_id="$(gh api graphql -f query='
            mutation($project:ID!, $issue:ID!) {
              addProjectV2ItemById(input: {projectId: $project, contentId: $issue}) {
                item {
                  id
                }
              }
            }' -f project=$PROJECT_ID -f issue=$ISSUE_ID --jq '.data.addProjectV2Item.item.id')"
          
          echo 'ITEM_ID='$item_id >> $GITHUB_ENV

      - name: Update item status to Bugs
        env:
          GITHUB_TOKEN: ${{ secrets.PROJECT_BOARD_PAT }}
          ITEM_ID: ${{ env.ITEM_ID }}
          STATUS_FIELD_ID: ${{ env.STATUS_FIELD_ID }}
          BUGS_OPTION_ID: ${{ env.BUGS_OPTION_ID }}
        run: |
          echo "BUGS_OPTION_ID=$BUGS_OPTION_ID"
          
          gh api graphql -f query='
            mutation($itemId: ID!, $projectId: ID!, $fieldId: ID!, $BUGS_OPTION_ID: String!) {
              updateProjectV2ItemFieldValue(input: {itemId: $itemId, projectId: $projectId, fieldId: $fieldId, value: { singleSelectOptionId: $BUGS_OPTION_ID }}) {
                clientMutationId
              }
            }' -f itemId=$ITEM_ID -f projectId=$PROJECT_ID -f fieldId=$STATUS_FIELD_ID -f BUGS_OPTION_ID=$BUGS_OPTION_ID
