name: Project Board Automation [Issue - Bug]

on:
  issues:
    types: [labeled]
    branches:
      - main
    labels:
      - bug

jobs:
  create_bug_card:
    runs-on: ubuntu-latest
    steps:
      - name: Get project data
        env:
          GITHUB_TOKEN: ${{ secrets.PROJECT_BOARD_PAT }}
          PROJECT_NUMBER: 2
        run: |
          gh api graphql -f query='
            query($login: String!, $number: Int!) {
              repository(owner: $login, name: $REPO_NAME) {
                projectV2(number: $number) {
                  id
                  columns(first: 100) {
                    nodes {
                      id
                      name
                    }
                  }
                }
              }
            }' -f login=${{ github.repository_owner }} -F REPO_NAME=${{ github.event.repository.name }} -F number=$PROJECT_NUMBER > project_data.json

          echo 'PROJECT_ID='$(jq '.data.repository.projectV2.id' project_data.json) >> $GITHUB_ENV
          echo 'BUG_COLUMN_ID='$(jq '.data.repository.projectV2.columns.nodes[] | select(.name== "Bug") | .id' project_data.json) >> $GITHUB_ENV

      - name: Create card in Bug column
        env:
          GITHUB_TOKEN: ${{ secrets.PROJECT_BOARD_PAT }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          gh api graphql -f query='
            mutation($column: ID!, $content: String!, $issue_id: ID!) {
              createProjectCard(input: {content: $content, projectColumnId: $column, contentId: $issue_id, contentType: ISSUE}) {
                cardEdge {
                  node {
                    id
                  }
                }
              }
            }' -f column=$BUG_COLUMN_ID -f content="Issue #$ISSUE_NUMBER" -f issue_id=$ISSUE_NUMBER
