name: Project Board Automation [Ready to Merge]

on:
  check_suite:
    types: [completed]
    branches:
      - main

jobs:
  move_to_ready_to_merge:
    runs-on: ubuntu-latest
    steps:
      - name: Get project data
        env:
          GITHUB_TOKEN: ${{ secrets.PROJECT_BOARD_PAT }}
          PROJECT_NUMBER: 2
        run: |
          gh api graphql -f query='
            query($login: String!, $number: Int!) {
              repository(owner: $login, name: $REPO_NAME) {
                projectV2(number: $number) {
                  id
                  columns(first: 100) {
                    nodes {
                      id
                      name
                    }
                  }
                }
              }
            }' -f login=${{ github.repository_owner }} -F REPO_NAME=${{ github.event.repository.name }} -F number=$PROJECT_NUMBER > project_data.json

          echo 'PROJECT_ID='$(jq '.data.repository.projectV2.id' project_data.json) >> $GITHUB_ENV
          echo 'READY_TO_MERGE_COLUMN_ID='$(jq '.data.repository.projectV2.columns.nodes[] | select(.name== "Ready to Merge") | .id' project_data.json) >> $GITHUB_ENV

      - name: Move PR to Ready to Merge column
        env:
          GITHUB_TOKEN: ${{ secrets.PROJECT_BOARD_PAT }}
          PR_NUMBER: ${{ github.event.check_suite.pull_requests[0].number }}
        run: |
          item_id="$( gh api graphql -f query='
            mutation($column: ID!, $pr:ID!) {
              moveProjectV2Item(input: {itemId: $pr, columnId: $column}) {
                item {
                  id
                }
              }
            }' -f column=$READY_TO_MERGE_COLUMN_ID -f pr=$PR_NUMBER --jq '.data.moveProjectV2Item.item.id')"

          echo 'ITEM_ID='$item_id >> $GITHUB_ENV
